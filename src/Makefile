# Makefile
#
# IFJ and IAL project (IFJ21 compiler)
# Team: 128 (variant II)
#
# Author: Martin Havlík (xhavli56)
# Author: Michal Šmahel (xsmahe01)

BINARY_NAME=ifj21_compiler
DOC_NAME=main
OBJFILES=main.o

CC=gcc-7.5  # Merlin default gcc version
CFLAGS=-std=c11 -g -pedantic -Wall -Wextra

# `make` only compiles main binary
all: build

# Template for compiling modules
# This is used for rules generated by `dep` rule
# $< ... first prerequisite
%.o: %.c
	$(CC) $(CFLAGS) -c $<

# Link modules into final binary
build: $(OBJFILES)
	$(CC) $(CFLAGS) $(OBJFILES) -o ../bin/$(BINARY_NAME)

#######################################
# Generate module dependencies
dep:
	$(CC) -MM *.c >dep.list

-include dep.list
#######################################

# Compile documentation (from its Git repository)
doc:
	git clone git@github.com:ceskyDJ/ifj-ial-project-docs.git
	cd ifj-ial-project-docs
	pdflatex $(DOC_NAME).tex
	bibtex $(DOC_NAME).aux
	pdflatex $(DOC_NAME).tex
	pdflatex $(DOC_NAME).tex
	mv $(DOC_NAME).pdf ../dokumentace.pdf
	cd ..
	rm -rf ifj-ial-project-docs

# Create final archive
archive: make_tmp doc copy_src copy_special
	tar -czf ../xsmahe01.tar.gz *
	cd ..
	rm -rf tmp

# Copy source files into tmp folder (for creating archive)
copy_src:
	cp -r ../src/*.c ../src/*.h .

# Copy special files (required by assignment) into tmp folder
copy_special:
	cp ../rozdeleni ../rozsireni . || true

# Create tmp folder where the final project structure will be prepared
make_tmp:
	cd ..
	mkdir tmp
	cd tmp

# Define virtual files and cleaning stuff
.PHONY: clean doc all archive copy_src copy_special make_tmp build dep
clean:
	rm -f *.o *.c~ *.h~

cleanall: clean
	rm -f dep.list xsmahe01.tar.gz
