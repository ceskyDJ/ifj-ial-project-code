Testing and developing here: https://www.cs.princeton.edu/courses/archive/spring20/cos320/LL1/

Dictionary:
    SEQ ... sequence
    E/e .. expression
    RET ... return
    FUN ... function
    '' ... epsilon
    DEC ... declaration
    DEF ... definition
    id ... identifier
    STMT ... statement

starting non-terminal: PROG
--- paste what is below to the simulator ---

1: PROG ::= REQUIRE CODE

2: REQUIRE ::= require "ifj21"

3: CODE ::= CODE' CODE''
4: CODE ::= ''
5: CODE' ::= FUN_DEC
6: CODE' ::= FUN_DEF
7: CODE' ::= CALL
8: CODE'' ::= CODE' CODE''
9: CODE'' ::= ''

10: TYPE_LIST::= TYPE TYPE_LIST'
11: TYPE_LIST::= ''
12: TYPE_LIST' ::= , TYPE TYPE_LIST'
13: TYPE_LIST' ::= ''
14: FUN_RET ::= : FUN_RET_LIST
15: FUN_RET ::= ''

16: CALL ::= id ( TERM_SEQ )

17: TERM_SEQ ::= TERM TERM_SEQ'
18: TERM_SEQ ::= ''
19: TERM_SEQ' ::= , TERM TERM_SEQ'
20: TERM_SEQ' ::= ''

21: FUN_RET_LIST ::= TYPE FUN_RET_LIST'
22: FUN_RET_LIST' ::= , TYPE FUN_RET_LIST'
23: FUN_RET_LIST' ::= ''

24: RET_STMT ::= return RET_E_LIST
25: RET_E_LIST ::= E_LIST
26: RET_E_LIST ::= ''

27: PARAM_LIST ::= PARAM PARAM'
28: PARAM_LIST ::= ''
29: PARAM ::= id : TYPE
30: PARAM' ::= , PARAM PARAM'
31: PARAM' ::= ''

32: BODY ::= BODY' BODY''
33: BODY ::= ''
34: BODY' ::= VAR_DEC_DEF
35: BODY' ::= STMT
36: BODY' ::= IF
37: BODY' ::= WHILE
38: BODY' ::= RET_STMT
39: BODY' ::= CALL
40: BODY'' ::= BODY' BODY''
41: BODY'' ::= ''

42: TERM ::= id
43: TERM ::= integer
44: TERM ::= number
45: TERM ::= string
46: TERM ::= nil

47: VAR_DEC_DEF ::= VAR_DEC VAR_ASSIGN
48: VAR_DEC ::= local id : TYPE
49: TYPE ::= integer
50: TYPE ::= number
51: TYPE ::= string
52: VAR_ASSIGN ::= = e
53: VAR_ASSIGN ::= ''

54: STMT ::= ID_SEQ = E_LIST/CALL
55: ID_SEQ ::= id ID_SEQ'
56: ID_SEQ' ::= , id ID_SEQ'
57: ID_SEQ' ::= ''

58: E_LIST ::= e E'
59: E' ::= , e E'
60: E' ::= ''

61: IF ::= if e then BODY else BODY end

62: WHILE ::= while e do BODY end

63: FUN_DEC ::= global id : FUN_SIGNATURE
64: FUN_SIGNATURE ::= function ( TYPE_LIST ) FUN_RET
65: FUN_DEF ::= function id ( PARAM_LIST ) FUN_RET BODY end

